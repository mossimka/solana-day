services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=/api
    depends_on:
      - backend
    command: npm run start

  backend:
    build:
      context: ./node-liquidity-bot
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
      - ./node-liquidity-bot/.env
    depends_on:
      - db
    command: npm run start

  binancebot:
    build:
      context: ./binancebot
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8001:8001"
    env_file:
      - ./binancebot/.env
    depends_on:
      - backend
    command: npm run start:dev

  rebalancer:
    build:
      context: ./raydium-clmm-bot
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8002:8002"
    env_file:
      - ./raydium-clmm-bot/.env
    depends_on:
      - db
      - backend
      - binancebot
    command: npm run start

  db:
    image: postgres:15
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sephyra
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data:
